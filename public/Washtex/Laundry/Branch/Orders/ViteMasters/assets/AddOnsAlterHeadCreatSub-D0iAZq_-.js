import"./style-CWPg30Uh.js";import"./EntryFile-BS4wfFeh.js";const GetUrl="bin",ConfigJson={GetUrl},StartFunc$y=async()=>{let t=getUrlQueryParams$3({inGetKey:"inRowPk"});return t===null?(alert("need inRowPk in URL "),await!1):await await(await fetch(`/${ConfigJson.GetUrl}/${jVarGlobalTableName}/${t}`)).json()};let getUrlQueryParams$3=({inGetKey:t})=>{const r=window.location.search;return new URLSearchParams(r).get(t)};const StartFunc$x=async()=>await StartFunc$y(),StartFunc$w=async()=>{let t=await StartFunc$x();return t===!1?await!1:(jFLocalShowInInputs({inDataAsObject:t}),jFBsRefereshId(),t)},jFLocalShowInInputs=({inDataAsObject:t})=>{document.getElementById("FormId").querySelectorAll("input").forEach(e=>{e.name in t&&(e.value=t[e.name])})},jFBsRefereshId=()=>{document.getElementById("BsSubTableRefreshId").click()},tableAttributes={"data-toolbar":"#ToolBarFixed","data-search":"true","data-searchable":"true","data-show-footer":"true","data-id-field":"pk"},AttributesJson={tableAttributes},StartFunc$v=()=>{var t=$("#table");t.attr(AttributesJson.tableAttributes)},method$2="POST",headers$2={Accept:"application/json","Content-Type":"application/json"},body$2="",KeysJson$2={method:method$2,headers:headers$2,body:body$2},StartFunc$u=()=>{let t=jVarGlobalSubTableTagId,e=document.getElementById(t).querySelector("tfoot").querySelectorAll("input"),l={};for(const o of e)l[o.name]=o.value;return l};let StartFunc$t=()=>{let t=StartFunc$u();return t.RefPK=getUrlQueryParams$2({inGetKey:"inRowPk"}),KeysJson$2.body=JSON.stringify(t),KeysJson$2},getUrlQueryParams$2=({inGetKey:t})=>{const r=window.location.search;return new URLSearchParams(r).get(t)},StartFunc$s=async()=>{let t=jVarGlobalSubTableName,r=StartFunc$t(),a=`/bin/${t}`;return await await fetch(a,r)},StartFunc$r=()=>{document.getElementById("BsSubTableRefreshId").click()},StartFunc$q=async()=>{(await StartFunc$s()).status===200&&StartFunc$r()};const StartFunc$p=()=>{StartFunc$q()};let StartFunc$o=()=>{let t=document.getElementById("SubTableFooterSaveButtonId");t!==null&&t.addEventListener("click",StartFunc$p)},KSEval={};const StartFunc$n=evt=>{let value=evt.key,jVarLocalCurrentTarget=evt.currentTarget,jVarLocalDataSet=jVarLocalCurrentTarget.dataset,jVarLocalEvalString=jVarLocalDataSet.ksclienteval;value==="Enter"&&(jFLocalInputValuesToOject(),jVarLocalCurrentTarget.value=eval(jVarLocalEvalString))},jFLocalInputValuesToOject=()=>{let t=jVarGlobalSubTableTagId;document.getElementById(t).querySelectorAll("tfoot input").forEach(e=>{if(e.type==="number"){KSEval[e.name]=parseInt(e.value);return}KSEval[e.name]=e.value})},StartFunc$m=()=>{StartFunc$o(),jFLocalKeyPress(),jFLocalSetFocusToFirstInput()},jFLocalSetFocusToFirstInput=()=>{let t=jVarGlobalSubTableTagId;document.getElementById(t).querySelector("tfoot input").focus()},jFLocalKeyPress=()=>{let t=jVarGlobalSubTableTagId,a=document.getElementById(t).querySelectorAll("tfoot input[data-ksclienteval]");a.length>0&&a.forEach(e=>{e.addEventListener("keypress",StartFunc$n)})},StartFunc$l=async()=>{let t=jVarGlobalSubTableTagId;var r=$(`#${t}`);r.bootstrapTable({data:[],onPostBody:StartFunc$m})},StartFunc$k=()=>{StartFunc$v(),StartFunc$l().then()},method$1="POST",headers$1={Accept:"application/json","Content-Type":"application/json"},body$1="",KeysJson$1={method:method$1,headers:headers$1,body:body$1};let StartFunc$j=()=>{let t=document.getElementById("FormId");return KeysJson$1.body=JSON.stringify(jFLocalserializeFormData$1(t)),KeysJson$1};function jFLocalserializeFormData$1(t){var r=new FormData(t),a={};for(var[e,l]of r)a[e]?(Array.isArray(a[e])||(a[e]=[a[e]]),a[e].push(l)):a[e]=l;return a}const PostUrl$2="bin",UrlJson$3={PostUrl:PostUrl$2};let StartFunc$i=async()=>{let t=UrlJson$3.PostUrl,r=jVarGlobalTableName,a=StartFunc$j(),e=`/${t}/${r}`;return await await(await fetch(e,a)).json()},StartFunc$h=()=>{let r=document.getElementById("FormId").querySelectorAll("[required]"),a=!0;return r.forEach(e=>{if(e.value.trim().length===0){e.classList.add("is-invalid"),a=!1;return}}),a};const RedirectToUrl="ShowSimple.html",UrlJson$2={RedirectToUrl};let StartFunc$g=()=>{window.location.href=`${jVarGlobalTableName}${UrlJson$2.RedirectToUrl}`},StartFunc$f=async()=>{if(StartFunc$h()){let r=await StartFunc$i();r!==null&&r&&StartFunc$g()}},StartFunc$e=()=>{let t=document.getElementById("SaveButtonId");t!==null&&t.addEventListener("click",StartFunc$f)};const PostUrl$1="bin",UrlJson$1={PostUrl:PostUrl$1};let StartFunc$d=async()=>{let t=UrlJson$1.PostUrl,r=jVarGlobalSubTableName,a=getUrlQueryParams$1({inGetKey:"inRowPk"}),e=`/${t}/${r}/FilterData/RefPK/${a}`;return await await fetch(e)},getUrlQueryParams$1=({inGetKey:t})=>{const r=window.location.search;return new URLSearchParams(r).get(t)},StartFunc$c=()=>{let r=document.getElementById("FormId").querySelectorAll("[required]"),a=!0;return r.forEach(e=>{if(e.value.trim().length===0){e.classList.add("is-invalid"),a=!1;return}}),a},StartFunc$b=({InData:t})=>{let r=jVarGlobalSubTableTagId;console.log("InData:",t);var a=$(`#${r}`);a.bootstrapTable("load",t)},StartFunc$a=async()=>{if(StartFunc$c()){let r=await StartFunc$d();if(r.status===200){let a=await r.json();a&&StartFunc$b({InData:a})}}},StartFunc$9=()=>{let t=document.getElementById("BsSubTableRefreshId");t!==null&&t.addEventListener("click",StartFunc$a)};const method="PUT",headers={Accept:"application/json","Content-Type":"application/json"},body="",KeysJson={method,headers,body};let StartFunc$8=()=>{let t=document.getElementById("FormId");return KeysJson.body=JSON.stringify(jFLocalserializeFormData(t)),KeysJson};function jFLocalserializeFormData(t){var r=new FormData(t),a={};for(var[e,l]of r)a[e]?(Array.isArray(a[e])||(a[e]=[a[e]]),a[e].push(l)):a[e]=l;return a}const PostUrl="bin",UrlJson={PostUrl};let StartFunc$7=async()=>{let t=UrlJson.PostUrl,r=jVarGlobalTableName,a=getUrlQueryParams({inGetKey:"inRowPk"}),e=StartFunc$8(),l=`/${t}/${r}/${a}`;return await await(await fetch(l,e)).json()},getUrlQueryParams=({inGetKey:t})=>{const r=window.location.search;return new URLSearchParams(r).get(t)},StartFunc$6=()=>{let r=document.getElementById("FormId").querySelectorAll("[required]"),a=!0;return r.forEach(e=>{if(e.value.trim().length===0){e.classList.add("is-invalid"),a=!1;return}}),a},StartFunc$5=()=>{window.location.href=""},StartFunc$4=async()=>{if(StartFunc$6()){let r=await StartFunc$7();r!==null&&r&&StartFunc$5()}},StartFunc$3=()=>{let t=document.getElementById("UpdateButtonId");t!==null&&t.addEventListener("click",StartFunc$4)},StartFunc$2=()=>{StartFunc$e(),StartFunc$9(),StartFunc$3()};const StartFunc$1=async()=>{StartFunc$w().then(),StartFunc$k(),StartFunc$2(),jFLocalFillDataLists()},jFLocalFillDataLists=()=>{document.getElementById("HeaderToDataListId").click()},StartFunc=()=>{StartFunc$1()};StartFunc();
